# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2018-02-15 17:38
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='타이틀')),
                ('name_ko', models.CharField(max_length=32, null=True, unique=True, verbose_name='타이틀')),
                ('name_en', models.CharField(max_length=32, null=True, unique=True, verbose_name='타이틀')),
                ('level', models.IntegerField(default=1, help_text='같은 카테고리 내 노출순서', verbose_name='노출순서')),
                ('is_closed', models.BooleanField(default=False, help_text='설정 시 관리자를 제외한 모든 유저의 접속이 불가능합니다.', verbose_name='중지여부')),
                ('max_permission_anon', models.IntegerField(choices=[(0, '권한없음'), (1, '접근권한'), (2, '읽기권한 (혹은 이에 준하는 특수권한)'), (3, '댓글권한 (혹은 이에 준하는 특수권한)'), (4, '쓰기권한 (혹은 이에 준하는 특수권한)'), (5, '수정권한 (혹은 이에 준하는 특수권한)'), (6, '삭제권한 (혹은 이에 준하는 특수권한)')], default=0, verbose_name='비로그인 유저의 최대 권한')),
                ('max_permission_auth', models.IntegerField(choices=[(0, '권한없음'), (1, '접근권한'), (2, '읽기권한 (혹은 이에 준하는 특수권한)'), (3, '댓글권한 (혹은 이에 준하는 특수권한)'), (4, '쓰기권한 (혹은 이에 준하는 특수권한)'), (5, '수정권한 (혹은 이에 준하는 특수권한)'), (6, '삭제권한 (혹은 이에 준하는 특수권한)')], default=2, verbose_name='로그인 유저의 최대 권한')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='카테고리명')),
                ('name_ko', models.CharField(max_length=32, null=True, unique=True, verbose_name='카테고리명')),
                ('name_en', models.CharField(max_length=32, null=True, unique=True, verbose_name='카테고리명')),
                ('is_open', models.BooleanField(default=True, verbose_name='사이트맵 노출여부')),
            ],
            options={
                'verbose_name': '카테고리',
                'verbose_name_plural': '카테고리(들)',
                'ordering': ['is_open'],
            },
        ),
        migrations.CreateModel(
            name='GroupServicePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.IntegerField(choices=[(0, '권한없음'), (1, '접근권한'), (2, '읽기권한 (혹은 이에 준하는 특수권한)'), (3, '댓글권한 (혹은 이에 준하는 특수권한)'), (4, '쓰기권한 (혹은 이에 준하는 특수권한)'), (5, '수정권한 (혹은 이에 준하는 특수권한)'), (6, '삭제권한 (혹은 이에 준하는 특수권한)')], default=1, verbose_name='권한')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group', verbose_name='그룹')),
            ],
            options={
                'verbose_name': '그룹별 서비스 이용권한',
                'verbose_name_plural': '그룹별 서비스 이용권한(들)',
                'ordering': ['service', 'permission', 'group'],
            },
        ),
        migrations.CreateModel(
            name='TopBanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, verbose_name='텍스트')),
                ('text_ko', models.CharField(max_length=128, null=True, verbose_name='텍스트')),
                ('text_en', models.CharField(max_length=128, null=True, verbose_name='텍스트')),
                ('url', models.URLField(blank=True, null=True, verbose_name='링크 URL')),
                ('terminate_at', models.DateTimeField(blank=True, help_text='공란일경우, 직접 삭제시까지 노출됩니다', null=True, verbose_name='노출종료일시')),
            ],
            options={
                'verbose_name': '탑배너',
                'verbose_name_plural': '탑배너(들)',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='manager.BaseService')),
                ('url', models.CharField(default='/', help_text='도메인 하위 경로만 적어주세요. /aaa/bbb 형식을 지켜주세요.', max_length=32, verbose_name='최상위 주소')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.Category', verbose_name='카테고리')),
            ],
            options={
                'verbose_name': '서비스',
                'verbose_name_plural': '서비스(들)',
                'ordering': ['category', 'level'],
            },
            bases=('manager.baseservice',),
        ),
        migrations.AddField(
            model_name='groupservicepermission',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.BaseService', verbose_name='서비스'),
        ),
        migrations.AddField(
            model_name='baseservice',
            name='permitted_groups',
            field=models.ManyToManyField(related_name='permitted_services', through='manager.GroupServicePermission', to='auth.Group', verbose_name='그룹별 권한'),
        ),
    ]
