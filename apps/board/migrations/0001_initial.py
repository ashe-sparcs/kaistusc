# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2018-02-15 17:38
from __future__ import unicode_literals

import apps.board.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('manager', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttachedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=apps.board.models.get_upload_path, verbose_name='첨부파일')),
            ],
            options={
                'verbose_name_plural': '첨부파일(들)',
                'verbose_name': '첨부파일',
            },
        ),
        migrations.CreateModel(
            name='BannerCarousel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.IntegerField(choices=[(0, '메인페이지')], verbose_name='노출위치')),
            ],
            options={
                'verbose_name_plural': '배너그룹(들)',
                'verbose_name': '배너그룹',
            },
        ),
        migrations.CreateModel(
            name='BasePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='등록일시')),
                ('content', models.TextField(verbose_name='내용')),
                ('content_ko', models.TextField(null=True, verbose_name='내용')),
                ('content_en', models.TextField(null=True, verbose_name='내용')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='삭제글')),
                ('is_secret', models.BooleanField(default=False, verbose_name='비밀글')),
                ('vote_up', models.IntegerField(default=0, verbose_name='추천수')),
                ('vote_down', models.IntegerField(default=0, verbose_name='비추천수')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='manager.Service')),
                ('is_main', models.BooleanField(default=False, verbose_name='메인페이지 노출')),
                ('role', models.IntegerField(choices=[(0, '기본'), (1, '사업'), (2, '논의')], default=0, verbose_name='보드 역할')),
            ],
            options={
                'verbose_name_plural': '게시판(들)',
                'verbose_name': '게시판',
            },
            bases=('manager.service',),
        ),
        migrations.CreateModel(
            name='BoardTab',
            fields=[
                ('baseservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='manager.BaseService')),
                ('url', models.CharField(help_text="탭을 나타낼 하위 경로만 적어주세요('/'를 포함하면 안됩니다)", max_length=32, verbose_name='하위 주소')),
                ('parent_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.Board', verbose_name='탭이 속한 게시판')),
            ],
            options={
                'verbose_name_plural': '탭(들)',
                'verbose_name': '탭',
                'ordering': ['parent_board', 'level'],
            },
            bases=('manager.baseservice',),
        ),
        migrations.CreateModel(
            name='PostActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=40, verbose_name='IP 주소')),
                ('activity', models.CharField(choices=[('VIEW', '조회'), ('VOTE', '추천/비추천')], max_length=4, verbose_name='활동구분')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='상품명')),
                ('price', models.IntegerField(verbose_name='가격')),
                ('description', models.TextField(verbose_name='상품 설명')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.Board', verbose_name='등록 게시판')),
                ('board_tab', models.ManyToManyField(blank=True, to='board.BoardTab', verbose_name='등록 탭')),
            ],
            options={
                'verbose_name_plural': '상품(들)',
                'verbose_name': '상품',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='카테고리명')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='일정')),
                ('title_ko', models.CharField(max_length=128, null=True, verbose_name='일정')),
                ('title_en', models.CharField(max_length=128, null=True, verbose_name='일정')),
                ('date', models.DateTimeField(verbose_name='날짜')),
            ],
            options={
                'verbose_name_plural': '일정(들)',
                'verbose_name': '일정',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='태그명')),
                ('name_ko', models.CharField(max_length=32, null=True, unique=True, verbose_name='태그명')),
                ('name_en', models.CharField(max_length=32, null=True, unique=True, verbose_name='태그명')),
                ('abbr', models.CharField(help_text='긴 태그명의 경우 태그명 대신 표시할 짧은 축약어입니다.', max_length=16, unique=True, verbose_name='태그 축약어')),
                ('abbr_ko', models.CharField(help_text='긴 태그명의 경우 태그명 대신 표시할 짧은 축약어입니다.', max_length=16, null=True, unique=True, verbose_name='태그 축약어')),
                ('abbr_en', models.CharField(help_text='긴 태그명의 경우 태그명 대신 표시할 짧은 축약어입니다.', max_length=16, null=True, unique=True, verbose_name='태그 축약어')),
                ('slug', models.CharField(help_text='URL 상 태그를 구분짓는 짧은 지시자입니다.', max_length=8, unique=True, verbose_name='태그 슬러그')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.Board', verbose_name='게시판')),
            ],
            options={
                'verbose_name_plural': '태그(들)',
                'verbose_name': '태그',
            },
        ),
        migrations.CreateModel(
            name='WebDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('embed_url', models.TextField(blank=True, verbose_name='웹 문서 삽입 URL')),
            ],
            options={
                'verbose_name_plural': '웹문서 링크(들)',
                'verbose_name': '웹문서 링크',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('basepost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='board.BasePost')),
                ('title', models.CharField(max_length=128, verbose_name='제목')),
                ('title_ko', models.CharField(max_length=128, null=True, verbose_name='제목')),
                ('title_en', models.CharField(max_length=128, null=True, verbose_name='제목')),
                ('url', models.URLField(blank=True, null=True, verbose_name='링크 URL')),
                ('image', models.ImageField(upload_to='banner', verbose_name='이미지')),
            ],
            options={
                'verbose_name_plural': '배너(들)',
                'verbose_name': '배너',
            },
            bases=('board.basepost',),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('basepost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='board.BasePost')),
            ],
            options={
                'verbose_name_plural': '댓글(들)',
                'verbose_name': '댓글',
                'ordering': ['date'],
            },
            bases=('board.basepost',),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('basepost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='board.BasePost')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='기구명')),
                ('phone', models.CharField(blank=True, max_length=32, verbose_name='전화번호')),
                ('url', models.URLField(blank=True, max_length=500, verbose_name='소통창구 링크')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.Board', verbose_name='등록 게시판')),
                ('board_tab', models.ManyToManyField(blank=True, to='board.BoardTab', verbose_name='등록 탭')),
            ],
            options={
                'verbose_name_plural': '연락망(들)',
                'verbose_name': '연락망',
            },
            bases=('board.basepost',),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('basepost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='board.BasePost')),
                ('url', models.URLField(verbose_name='URL')),
                ('text', models.CharField(max_length=128, verbose_name='텍스트')),
                ('text_ko', models.CharField(max_length=128, null=True, verbose_name='텍스트')),
                ('text_en', models.CharField(max_length=128, null=True, verbose_name='텍스트')),
            ],
            options={
                'verbose_name_plural': '링크(들)',
                'verbose_name': '링크',
            },
            bases=('board.basepost',),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('basepost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='board.BasePost')),
                ('title', models.CharField(max_length=128, verbose_name='제목')),
                ('title_ko', models.CharField(max_length=128, null=True, verbose_name='제목')),
                ('title_en', models.CharField(max_length=128, null=True, verbose_name='제목')),
                ('is_notice', models.BooleanField(default=False, verbose_name='공지글')),
            ],
            options={
                'verbose_name_plural': '포스트(들)',
                'verbose_name': '포스트',
            },
            bases=('board.basepost',),
        ),
        migrations.AddField(
            model_name='webdoc',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.BasePost', verbose_name='연결된 포스트'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.ProductCategory', verbose_name='상품 카테고리'),
        ),
        migrations.AddField(
            model_name='postactivity',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.BasePost', verbose_name='포스트'),
        ),
        migrations.AddField(
            model_name='postactivity',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='유저'),
        ),
        migrations.AddField(
            model_name='basepost',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='작성자'),
        ),
        migrations.AddField(
            model_name='basepost',
            name='involved_users',
            field=models.ManyToManyField(related_name='involved_posts', through='board.PostActivity', to=settings.AUTH_USER_MODEL, verbose_name='참여자'),
        ),
        migrations.AddField(
            model_name='attachedfile',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.BasePost', verbose_name='연결된 포스트'),
        ),
        migrations.CreateModel(
            name='DebatePost',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='board.Post')),
                ('is_closed', models.BooleanField(default=False, verbose_name='논쟁 종결 여부')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='종결 예정일')),
            ],
            options={
                'verbose_name_plural': '논의(들)',
                'verbose_name': '논의',
            },
            bases=('board.post',),
        ),
        migrations.CreateModel(
            name='ProjectPost',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='board.Post')),
                ('is_pledge', models.BooleanField(default=False, verbose_name='공약')),
            ],
            options={
                'verbose_name_plural': '사업 포스트(들)',
                'verbose_name': '사업 포스트',
            },
            bases=('board.post',),
        ),
        migrations.AddField(
            model_name='post',
            name='board',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.Board', verbose_name='등록 게시판'),
        ),
        migrations.AddField(
            model_name='post',
            name='board_tab',
            field=models.ManyToManyField(blank=True, to='board.BoardTab', verbose_name='등록 탭'),
        ),
        migrations.AddField(
            model_name='post',
            name='tag',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='board.Tag', verbose_name='태그'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.Post', verbose_name='상위 포스트'),
        ),
        migrations.AddField(
            model_name='bannercarousel',
            name='banners',
            field=models.ManyToManyField(to='board.Banner', verbose_name='배너'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.ProjectPost', verbose_name='게시글'),
        ),
    ]
